% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/h3sdm_classify.R
\name{h3sdm_classify}
\alias{h3sdm_classify}
\title{Classify predictions based on an optimal threshold}
\usage{
h3sdm_classify(predictions_sf, threshold)
}
\arguments{
\item{predictions_sf}{An \code{sf} object containing a numeric column named
\code{prediction}, typically produced by \code{\link[=h3sdm_predict]{h3sdm_predict()}}.}

\item{threshold}{A numeric value representing the probability threshold
(e.g., \code{0.45}) above which predictions are classified as presence (\code{1}).}
}
\value{
An \code{sf} object with the same geometry and all original columns, plus a new
integer column \code{predicted_presence} with values \code{0} (absence) or \code{1} (presence).
}
\description{
Converts continuous probability predictions into binary presence/absence
based on a specified threshold.
}
\details{
This function is useful for converting continuous probability outputs into
binary presence/absence data for mapping or model evaluation purposes.
}
\examples{
\dontrun{
library(sf)
library(dplyr)

# Crear un sf de ejemplo
df <- data.frame(
  id = 1:5,
  prediction = c(0.2, 0.6, 0.45, 0.8, 0.3),
  lon = c(-75, -74, -73, -72, -71),
  lat = c(10, 11, 12, 13, 14)
)

df_sf <- st_as_sf(df, coords = c("lon", "lat"), crs = 4326)

# Clasificar usando un umbral
classified_sf <- h3sdm_classify(df_sf, threshold = 0.5)

# Revisar resultados
print(classified_sf)
}

}
