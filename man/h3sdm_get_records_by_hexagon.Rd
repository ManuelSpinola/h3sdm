% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/h3sdm_get_records_by_hexagon.R
\name{h3sdm_get_records_by_hexagon}
\alias{h3sdm_get_records_by_hexagon}
\title{Download Species Records and Count Occurrences per H3 Hexagon}
\usage{
h3sdm_get_records_by_hexagon(
  species,
  aoi_sf,
  res = 6,
  providers = NULL,
  remove_duplicates = FALSE,
  date = NULL,
  expand_factor = 0.1,
  limit = 500
)
}
\arguments{
\item{species}{Character vector specifying the species names to query (e.g., \code{c("Puma concolor", "Panthera onca")}).}

\item{aoi_sf}{An \code{sf} object defining the Area of Interest (AOI).}

\item{res}{Numeric. The H3 resolution level (default is 6). Determines the size of the hexagons.}

\item{providers}{Character vector of data providers to query (e.g., "gbif", "bison"). If \code{NULL}, all available providers are used.}

\item{remove_duplicates}{Logical. If \code{TRUE}, records with identical longitude and latitude are removed before counting. Default is \code{FALSE}.}

\item{date}{Character vector specifying a date range (e.g., \code{c('2000-01-01', '2020-12-31')}).}

\item{expand_factor}{Numeric. Factor to expand the AOI bounding box before H3 grid generation. Default is 0.1 (10\\% expansion).}

\item{limit}{Numeric. The maximum number of records to retrieve per species per provider during the initial query. Default is 500.}
}
\value{
An \code{sf} object containing the H3 hexagonal grid (\code{MULTIPOLYGON}),
with new integer columns appended. Each new column corresponds to a species (with
spaces replaced by underscores in the name) and contains the count of occurrence
records found within that hexagon. Hexagons with no records for a species will have a value of 0.
}
\description{
This function integrates data acquisition, hexagonal gridding, and spatial joining
to count the number of occurrence records for one or more species within each
H3 hexagon covering the Area of Interest (AOI).
}
\details{
The workflow for each species is:
\enumerate{
\item \strong{Grid Generation:} An H3 grid is created across the AOI using \code{h3sdm_get_grid()}.
\item \strong{Data Download:} Occurrence records are downloaded using \code{h3sdm_get_records()} (which uses \code{spocc}).
\item \strong{Spatial Join:} Points are joined to the hexagonal grid using \code{sf::st_join}.
\item \strong{Counting:} The number of points is counted per hexagon (\code{h3_address}).
\item \strong{Aggregation:} Counts are merged back into the main grid.
}

This function handles API failures using \code{tryCatch} and ensures the column names
derived from species names are safe for use in R by replacing spaces with underscores.
}
\examples{
\dontrun{
# Assuming aoi_sf is a valid sf polygon
# species_list <- c("Agalychnis callidryas", "Smilisca baudinii")
# count_sf <- h3sdm_get_records_by_hexagon(species_list, aoi_sf, res = 7, limit = 1000)
# head(count_sf)
}
}
\seealso{
\code{\link[h3sdm]{h3sdm_get_grid}}, \code{\link[h3sdm]{h3sdm_get_records}}
}
