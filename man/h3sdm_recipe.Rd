% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/h3sdm_recipe.R
\name{h3sdm_recipe}
\alias{h3sdm_recipe}
\title{Create a tidymodels recipe for H3-based SDMs}
\usage{
h3sdm_recipe(data)
}
\arguments{
\item{data}{An \code{sf} object, typically the result of the \code{h3sdm_data()}
function, which includes species presence-absence data, H3 addresses, and
environmental predictors. The geometry must be of type \code{MULTIPOLYGON}.}
}
\value{
A \code{tidymodels} recipe object ready to be used in a modeling workflow.
It includes a custom class of \code{"h3sdm_recipe"}.
}
\description{
This function prepares an sf object with H3 hexagonal data for
modeling with the \code{tidymodels} ecosystem. It automatically extracts
centroid coordinates and assigns appropriate roles to the variables.
}
\details{
The function handles several key data preparation steps:
\itemize{
\item It extracts the centroid coordinates (x and y) from the polygon
geometries to be used as spatial predictors in the model.
\item It removes the geometry column, as \code{tidymodels} works with
tabular data.
\item It explicitly assigns roles to key columns:
\itemize{
\item \strong{\code{presence}}: Assigned the \code{"outcome"} role, as it's the
variable to be predicted.
\item \strong{\code{h3_address}}: Assigned the \code{"id"} role, ensuring it is
kept in the dataset but not used as a predictor. This is essential
for later joining with prediction results.
\item \strong{\code{x} and \code{y}}: Assigned the \code{"spatial_predictor"} role.
}
}
All other columns are automatically assigned the default \code{"predictor"} role.
}
\examples{
\dontrun{
# Assuming `combined_data` is an sf object from h3sdm_data()
# with a 'presence' variable and other predictors.

# Create the tidymodels recipe
sdm_recipe <- h3sdm_recipe(combined_data)

# View the recipe's structure
sdm_recipe

# You can now use `sdm_recipe` in a tidymodels workflow.
}
}
